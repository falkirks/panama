# The structure of the file is as follows:
# 'sanitizationLevel' indicates the level of sanitization to perform on the response graph.
# sanitization level could be low, medium or high.
# For a given level of sanitization, provenance is individually sanitized for that level,
# as well for all the levels below that level. For example, if level is high, provenance is sanitized for all 3:
# low, medium and high levels separately.
# sanitization is done according to the strategy programmed in the transformer source code.

# One line contains the sanitization level, followed by its details.
# Each level of sanitization is mentioned on a separate line, followed by its details.
# The details include a comma-separated list of annotations to sanitize for each type of Vertex and Edge.
# As an example, for 'Process' vertex, the following line:
# 'Process=annotation_1, annotation_2, ....., annotation_n'

# You can also sanitize annotations regardless of the type of vertex or edge:
# Vertex=annotation_1, annotation_2, ....., annotation_n'

# Following are the various strategies for sanitization composite annotations...
# remote address: (xxx.xxx.xxx.xxx)
# 'low', the first octet is sanitized.
# 'medium', the second octet is sanitized.
# 'high', the third octet is sanitized.

# path: (w/x/y/z/...)
# 'low', path after third level is sanitized.
# 'medium', path after the second level is sanitized.
# 'high', path after the first level is sanitized.

# time: (yyyy-MM-dd HH:mm:ss)
# 'low', minute and second are sanitized.
# 'medium', hour is sanitized.
# 'high', day is sanitized.

sanitizationLevel=low

low
Process=cwd
Agent=fsgid,fsuid,sgid,suid
Artifact=remote address,path
Edge=time

medium
Process=command line
Agent=uid,gid
Artifact=remote address,path
Edge=time,size

high
Process=name
Agent=euid
Artifact=remote address,path
Edge=time,operation
